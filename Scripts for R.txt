Written at the beginning: This includes all the code analyzed in the article. The tools used for analysis include the "gemtc" package in R4.2.2 and STATA15. The initial data for the analysis is publicly available in Supplementary Table S4. Here is the script for anlysis in R.

library(gemtc)
library(coda)
####Set working dictionary：
setwd("D:\\数据分析")
#####data import
d_anaemia<-read.csv("D:\\数据分析\\不良反应\\anaemia.csv")
d_arthralgia<-read.csv("D:\\数据分析\\不良反应\\arthralgia.csv")
d_backpain<-read.csv("D:\\数据分析\\不良反应\\backpain.csv")
d_diarrhea<-read.csv("D:\\数据分析\\不良反应\\diarrhea.csv")
d_fatigue<-read.csv("D:\\数据分析\\不良反应\\fatigue.csv")
d_headache_dizziness<-read.csv("D:\\数据分析\\不良反应\\headache_dizziness.csv")
d_hypertension<-read.csv("D:\\数据分析\\不良反应\\hypertension.csv")
d_nausea<-read.csv("D:\\数据分析\\不良反应\\nausea.csv")
###convert to gemtc format：
net_anaemia <- mtc.network(d_anaemia)
net_arthralgia <- mtc.network(d_arthralgia)
net_backpain <- mtc.network(d_backpain)
net_diarrhea <- mtc.network(d_diarrhea)
net_fatigue <- mtc.network(d_fatigue)
net_headache <- mtc.network(d_headache_dizziness)
net_hypertension <- mtc.network(d_hypertension)
net_nausea <- mtc.network(d_nausea)
#####anaemia
model_anaemia<-mtc.model(net_anaemia,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_anaemia <- mtc.run(model_anaemia, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_anaemia)
modelume_anaemia<-mtc.model(net_anaemia,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_anaemia <- mtc.run(modelume_anaemia, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(resultsume_anaemia)
model_anaemia<-mtc.model(net_anaemia,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_anaemia<- mtc.run(model_anaemia, n.adapt = 20000, n.iter = 50000, thin = 1)
####forest plot
forest(results_anaemia)
#Ranking
ranks_anaemia<- rank.probability(results_anaemia,preferredDirection=1)
print(ranks_anaemia)
write.csv(ranks_anaemia, "ranks_anaemia.csv")
tb_anaemia<-relative.effect.table(results_anaemia)
tb1_anaemia<-round(exp(tb_anaemia),2)

write.csv(tb1_anaemia, "anaemia.csv")

########arthralgia
model_arthralgia<-mtc.model(net_arthralgia,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_arthralgia<- mtc.run(model_arthralgia, n.adapt = 20000, n.iter = 50000, thin = 1)
modelume_arthralgia<-mtc.model(net_arthralgia,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_arthralgia <- mtc.run(modelume_arthralgia, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_arthralgia)
summary(resultsume_arthralgia)
model_arthralgia<-mtc.model(net_arthralgia,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_arthralgia<- mtc.run(model_arthralgia, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_arthralgia)
ranks_arthralgia<- rank.probability(results_arthralgia,preferredDirection=1)
print(ranks_arthralgia)
write.csv(ranks_arthralgia, "ranks_arthralgia.csv")
tb_arthralgia<-relative.effect.table(results_arthralgia)
tb1_arthralgia<-round(exp(tb_arthralgia),2)
write.csv(tb1_arthralgia, "arthralgia.csv")
#########backpain
model_backpain<-mtc.model(net_backpain,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_backpain<- mtc.run(model_backpain, n.adapt = 20000, n.iter = 50000, thin = 1)
modelume_backpain<-mtc.model(net_backpain,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_backpain <- mtc.run(modelume_backpain, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_backpain)
summary(resultsume_backpain)
model_backpain<-mtc.model(net_backpain,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_backpain<- mtc.run(model_backpain, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_backpain)
ranks_backpain<- rank.probability(results_backpain,preferredDirection=1)
print(ranks_backpain)
write.csv(ranks_backpain, "ranks_backpain.csv")
tb_backpain<-relative.effect.table(results_backpain)
tb1_backpain<-round(exp(tb_backpain),2)
write.csv(tb1_backpain, "backpain.csv")
########diarrhea
model_diarrhea<-mtc.model(net_diarrhea,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_diarrhea<- mtc.run(model_diarrhea, n.adapt = 20000, n.iter = 50000, thin = 1)
modelume_diarrhea<-mtc.model(net_diarrhea,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_diarrhea <- mtc.run(modelume_diarrhea, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_diarrhea)
summary(resultsume_diarrhea)
model_diarrhea<-mtc.model(net_diarrhea,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_diarrhea<- mtc.run(model_diarrhea, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_diarrhea)
ranks_diarrhea<- rank.probability(results_diarrhea,preferredDirection=1)
print(ranks_diarrhea)
write.csv(ranks_diarrhea, "ranks_diarrhea.csv")
tb_diarrhea<-relative.effect.table(results_diarrhea)
tb1_diarrhea<-round(exp(tb_diarrhea),2)
write.csv(tb1_diarrhea, "diarrhea.csv")
########fatigue
model_fatigue<-mtc.model(net_fatigue,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_fatigue<- mtc.run(model_fatigue, n.adapt = 20000, n.iter = 50000, thin = 1)
modelume_fatigue<-mtc.model(net_fatigue,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_fatigue <- mtc.run(modelume_fatigue, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_fatigue)
summary(resultsume_fatigue)
model_fatigue<-mtc.model(net_fatigue,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_fatigue<- mtc.run(model_fatigue, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_fatigue)
ranks_fatigue<- rank.probability(results_fatigue,preferredDirection=1)
print(ranks_fatigue)
write.csv(ranks_fatigue, "ranks_fatigue.csv")
tb_fatigue<-relative.effect.table(results_fatigue)
tb1_fatigue<-round(exp(tb_fatigue),2)
write.csv(tb1_fatigue, "fatigue.csv")
########headache
model_headache<-mtc.model(net_headache,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_headache<- mtc.run(model_headache, n.adapt = 20000, n.iter = 50000, thin = 1)
modelume_headache<-mtc.model(net_headache,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_headache <- mtc.run(modelume_headache, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_headache)
summary(resultsume_headache)
model_headache<-mtc.model(net_headache,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_headache<- mtc.run(model_headache, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_headache)
ranks_headache<- rank.probability(results_headache,preferredDirection=1)
print(ranks_headache)
write.csv(ranks_headache, "ranks_headache.csv")
tb_headache<-relative.effect.table(results_headache)
tb1_headache<-round(exp(tb_headache),2)
write.csv(tb1_headache, "headache.csv")
########hypertension
model_hypertension<-mtc.model(net_hypertension,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_hypertension<- mtc.run(model_hypertension, n.adapt = 20000, n.iter = 50000, thin = 1)
modelume_hypertension<-mtc.model(net_hypertension,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_hypertension <- mtc.run(modelume_hypertension, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_hypertension)
summary(resultsume_hypertension)
model_hypertension<-mtc.model(net_hypertension,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_hypertension<- mtc.run(model_hypertension, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_hypertension)
ranks_hypertension<- rank.probability(results_hypertension,preferredDirection=1)
print(ranks_hypertension)
write.csv(ranks_hypertension, "ranks_hypertension.csv")
tb_hypertension<-relative.effect.table(results_hypertension)
tb1_hypertension<-round(exp(tb_hypertension),2)
write.csv(tb1_hypertension, "hypertension.csv")
########nausea
model_nausea<-mtc.model(net_nausea,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_nausea<- mtc.run(model_nausea, n.adapt = 20000, n.iter = 50000, thin = 1)
modelume_nausea<-mtc.model(net_nausea,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_nausea <- mtc.run(modelume_nausea, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_nausea)
summary(resultsume_nausea)
model_nausea<-mtc.model(net_nausea,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_nausea<- mtc.run(model_nausea, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_nausea)
ranks_nausea<- rank.probability(results_nausea,preferredDirection=1)
print(ranks_nausea)
write.csv(ranks_nausea, "ranks_nausea.csv")
tb_nausea<-relative.effect.table(results_nausea)
tb1_nausea<-round(exp(tb_nausea),2)
write.csv(tb1_nausea, "nausea.csv")


#####Survival analysis
library(gemtc)
library(coda)
######data import
d_osf<-read.csv("D:\\数据分析\\疗效\\OS-F.csv")
d_psarrf<-read.csv("D:\\数据分析\\疗效\\PSARR-F.csv")
d_rpfsf<-read.csv("D:\\数据分析\\疗效\\rPFS-F.csv")
d_ttppf<-read.csv("D:\\数据分析\\疗效\\TTPP-F.csv")
d_osc<-read.csv("D:\\数据分析\\疗效\\OS-C.csv")
d_psarrc<-read.csv("D:\\数据分析\\疗效\\PSARR-C.csv")
d_rpfsc<-read.csv("D:\\数据分析\\疗效\\rPFS-C.csv")
d_ttppc<-read.csv("D:\\数据分析\\疗效\\TTPP-C.csv")
######OS-F:
net_osf <- mtc.network(data.re = d_osf)
model_osf<-mtc.model(net_osf,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_osf <- mtc.run(model_osf, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_osf)
modelume_osf<-mtc.model(net_osf,type="ume",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
resultsume_osf <- mtc.run(modelume_osf, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(resultsume_osf)
model_osf<-mtc.model(net_osf,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_osf <- mtc.run(model_osf, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_osf)
ranks_osf<- rank.probability(results_osf,preferredDirection=-1)
print(ranks_osf)
write.csv(ranks_osf, "D:\\数据分析\\疗效\\rank_osf.csv")
tb_osf<-relative.effect.table(results_osf)
tb1_osf<-round(exp(tb_osf),2)
write.csv(tb1_osf, "D:\\数据分析\\疗效\\osf.csv")
######OS-C:
net_osc <- mtc.network(data.re = d_osc)
model_osc<-mtc.model(net_osc,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_osc <- mtc.run(model_osc, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_osc)
modelume_osc<-mtc.model(net_osc,type="ume",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
resultsume_osc <- mtc.run(modelume_osc, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(resultsume_osc)
model_osc<-mtc.model(net_osc,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_osc <- mtc.run(model_osc, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_osc)
ranks_osc<- rank.probability(results_osc,preferredDirection=-1)
print(ranks_osc)
write.csv(ranks_osc, "D:\\数据分析\\疗效\\rank_osc.csv")
tb_osc<-relative.effect.table(results_osc)
tb1_osc<-round(exp(tb_osc),2)
write.csv(tb1_osc, "D:\\数据分析\\疗效\\osc.csv")
#####PSARR-F:
net_psarrf<- mtc.network(d_psarrf)
model_psarrf<-mtc.model(net_psarrf,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf<- mtc.run(model_psarrf, n.adapt = 20000, n.iter = 50000, thin = 1)
modelume_psarrf<-mtc.model(net_psarrf,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_psarrf <- mtc.run(modelume_psarrf, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_psarrf)
summary(resultsume_psarrf)
model_psarrf<-mtc.model(net_psarrf,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf<- mtc.run(model_psarrf, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrf)
ranks_psarrf<- rank.probability(results_psarrf,preferredDirection=1)
print(ranks_psarrf)
write.csv(ranks_psarrf, "ranks_psarrf.csv")
tb_psarrf<-relative.effect.table(results_psarrf)
tb1_psarrf<-round(exp(tb_psarrf),2)
write.csv(tb1_psarrf, "psarrf.csv")

#####PSARR-C:
net_psarrc<- mtc.network(d_psarrc)
model_psarrc<-mtc.model(net_psarrc,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrc<- mtc.run(model_psarrc, n.adapt = 20000, n.iter = 50000, thin = 1)
modelume_psarrc<-mtc.model(net_psarrc,type="ume",n.chain=4,likelihood="binom",link="log",linearModel="random")
resultsume_psarrc <- mtc.run(modelume_psarrc, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_psarrc)
summary(resultsume_psarrc)
model_psarrc<-mtc.model(net_psarrc,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrc<- mtc.run(model_psarrc, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrc)
ranks_psarrc<- rank.probability(results_psarrc,preferredDirection=1)
print(ranks_psarrc)
write.csv(ranks_psarrc, "ranks_psarrc.csv")
tb_psarrc<-relative.effect.table(results_psarrc)
tb1_psarrc<-round(exp(tb_psarrc),2)
write.csv(tb1_psarrc, "psarrc.csv")

#######TTPP-F
net_ttppf <- mtc.network(data.re= d_ttppf)
model_ttppf<-mtc.model(net_ttppf,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_ttppf <- mtc.run(model_ttppf, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_ttppf)
modelume_ttppf<-mtc.model(net_ttppf,type="ume",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
resultsume_ttppf <- mtc.run(modelume_ttppf, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(resultsume_ttppf)
model_ttppf<-mtc.model(net_ttppf,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_ttppf <- mtc.run(model_ttppf, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_ttppf)
ranks_ttppf<- rank.probability(results_ttppf,preferredDirection=-1)
print(ranks_ttppf)
write.csv(ranks_ttppf, "D:\\数据分析\\疗效\\rank_ttppf.csv")
tb_ttppf<-relative.effect.table(results_ttppf)
tb1_ttppf<-round(exp(tb_ttppf),2)
write.csv(tb1_ttppf, "D:\\数据分析\\疗效\\ttppf.csv")

#######TTPP-C
net_ttppc <- mtc.network(data.re= d_ttppc)
model_ttppc<-mtc.model(net_ttppc,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_ttppc <- mtc.run(model_ttppc, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_ttppc)
modelume_ttppc<-mtc.model(net_ttppc,type="ume",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
resultsume_ttppc <- mtc.run(modelume_ttppc, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(resultsume_ttppc)
model_ttppc<-mtc.model(net_ttppc,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_ttppc <- mtc.run(model_ttppc, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_ttppc)
ranks_ttppc<- rank.probability(results_ttppc,preferredDirection=-1)
print(ranks_ttppc)
write.csv(ranks_ttppc, "D:\\数据分析\\疗效\\rank_ttppc.csv")
tb_ttppc<-relative.effect.table(results_ttppc)
tb1_ttppc<-round(exp(tb_ttppc),2)
write.csv(tb1_ttppc, "D:\\数据分析\\疗效\\ttppc.csv")

#####rPFSf
net_rpfsf <- mtc.network(data.re= d_rpfsf)
model_rpfsf<-mtc.model(net_rpfsf,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_rpfsf <- mtc.run(model_rpfsf, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_rpfsf)
modelume_rpfsf<-mtc.model(net_rpfsf,type="ume",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
resultsume_rpfsf <- mtc.run(modelume_rpfsf, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(resultsume_rpfsf)
model_rpfsf<-mtc.model(net_rpfsf,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_rpfsf <- mtc.run(model_rpfsf, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_rpfsf)
ranks_rpfsf<- rank.probability(results_rpfsf,preferredDirection=-1)
print(ranks_rpfsf)
write.csv(ranks_rpfsf, "D:\\数据分析\\疗效\\rank_rpfsf.csv")
tb_rpfsf<-relative.effect.table(results_rpfsf)
tb1_rpfsf<-round(exp(tb_rpfsf),2)
write.csv(tb1_rpfsf, "D:\\数据分析\\疗效\\rpfsf.csv")

#####rPFS-C
net_rpfsc <- mtc.network(data.re= d_rpfsc)
model_rpfsc<-mtc.model(net_rpfsc,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_rpfsc <- mtc.run(model_rpfsc, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(results_rpfsc)
modelume_rpfsc<-mtc.model(net_rpfsc,type="ume",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
resultsume_rpfsc <- mtc.run(modelume_rpfsc, n.adapt = 20000, n.iter = 50000, thin = 1)
summary(resultsume_rpfsc)
model_rpfsc<-mtc.model(net_rpfsc,type="consistency",n.chain=4,likelihood="binom",link="cloglog",linearModel="random")
results_rpfsc <- mtc.run(model_rpfsc, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_rpfsc)
ranks_rpfsc<- rank.probability(results_rpfsc,preferredDirection=-1)
print(ranks_rpfsc)
write.csv(ranks_rpfsc, "D:\\数据分析\\疗效\\rank_rpfsc.csv")
tb_rpfsc<-relative.effect.table(results_rpfsc)
tb1_rpfsc<-round(exp(tb_rpfsc),2)
write.csv(tb1_rpfsc, "D:\\数据分析\\疗效\\rpfsc.csv")

#######SUCRA
sucra(ranks_osf)
sucra(ranks_rpfsf)
sucra(ranks_psarrf)
sucra(ranks_ttppf)
sucra(ranks_osc)
sucra(ranks_rpfsc)
sucra(ranks_psarrc)
sucra(ranks_ttppc)
sucra(ranks_anaemia)
sucra(ranks_arthralgia)
sucra(ranks_backpain)
sucra(ranks_diarrhea)
sucra(ranks_fatigue)
sucra(ranks_headache)
sucra(ranks_hypertension)
sucra(ranks_nausea)

####test for local heterogeneity
result_anohe_osf <- mtc.anohe(net_osf)
c_osf<-summary(result_anohe_osf)
print(c_osf)
plot(c_osf)

result_anohe_osc <- mtc.anohe(net_osc)
c_osc<-summary(result_anohe_osc)
print(c_osc)
plot(c_osc)

result_anohe_rpfsf <- mtc.anohe(net_rpfsf)
c_rpfsf<-summary(result_anohe_rpfsf)
print(c_rpfsf)
plot(c_rpfsf)

result_anohe_rpfsc <- mtc.anohe(net_rpfsc)
c_rpfsc<-summary(result_anohe_rpfsc)
print(c_rpfsc)
plot(c_rpfsc)

result_anohe_ttppf <- mtc.anohe(net_ttppf)
c_ttppf<-summary(result_anohe_ttppf)
print(c_ttppf)
plot(c_ttppf)

result_anohe_ttppc <- mtc.anohe(net_ttppc)
c_ttppc<-summary(result_anohe_ttppc)
print(c_ttppc)
plot(c_ttppc)

result_anohe_psarrf <- mtc.anohe(net_psarrf,link="log")
c_psarrf<-summary(result_anohe_psarrf)
print(c_psarrf)
plot(c_psarrf)

result_anohe_psarrc <- mtc.anohe(net_psarrc,link="log")
c_psarrc<-summary(result_anohe_psarrc)
print(c_psarrc)
plot(c_psarrc)

result_anohe_anaemia <- mtc.anohe(net_anaemia,link="log")
c_anaemia<-summary(result_anohe_anaemia)
print(c_anaemia)
plot(c_anaemia)

result_anohe_arthralgia <- mtc.anohe(net_arthralgia,link="log")
c_arthralgia<-summary(result_anohe_arthralgia)
print(c_arthralgia)
plot(c_arthralgia)

result_anohe_backpain <- mtc.anohe(net_backpain,link="log")
c_backpain<-summary(result_anohe_backpain)
print(c_backpain)
plot(c_backpain)

result_anohe_diarrhea <- mtc.anohe(net_diarrhea,link="log")
c_diarrhea<-summary(result_anohe_diarrhea)
print(c_diarrhea)
plot(c_diarrhea)

result_anohe_fatigue <- mtc.anohe(net_fatigue,link="log")
c_fatigue<-summary(result_anohe_fatigue)
print(c_fatigue)
plot(c_fatigue)

result_anohe_headache <- mtc.anohe(net_headache,link="log")
c_headache<-summary(result_anohe_headache)
print(c_headache)
plot(c_headache)

result_anohe_hypertension <- mtc.anohe(net_hypertension,link="log")
c_hypertension<-summary(result_anohe_hypertension)
print(c_hypertension)
plot(c_hypertension)

result_anohe_nausea <- mtc.anohe(net_nausea,link="log")
c_nausea<-summary(result_anohe_nausea)
print(c_nausea)
plot(c_nausea)

######Leave one out(PSARR-f)
d_psarrf1<-read.csv("D:\\数据分析\\疗效\\loo\\PSARR-F1.csv")
d_psarrf2<-read.csv("D:\\数据分析\\疗效\\loo\\PSARR-F2.csv")
d_psarrf3<-read.csv("D:\\数据分析\\疗效\\loo\\PSARR-F3.csv")
d_psarrf4<-read.csv("D:\\数据分析\\疗效\\loo\\PSARR-F4.csv")
d_psarrf5<-read.csv("D:\\数据分析\\疗效\\loo\\PSARR-F5.csv")
d_psarrf6<-read.csv("D:\\数据分析\\疗效\\loo\\PSARR-F6.csv")
d_psarrf7<-read.csv("D:\\数据分析\\疗效\\loo\\PSARR-F7.csv")
d_psarrf8<-read.csv("D:\\数据分析\\疗效\\loo\\PSARR-F8.csv")
net_psarrf1<- mtc.network(d_psarrf1)
net_psarrf2<- mtc.network(d_psarrf2)
net_psarrf3<- mtc.network(d_psarrf3)
net_psarrf4<- mtc.network(d_psarrf4)
net_psarrf5<- mtc.network(d_psarrf5)
net_psarrf6<- mtc.network(d_psarrf6)
net_psarrf7<- mtc.network(d_psarrf7)
net_psarrf8<- mtc.network(d_psarrf8)
model_psarrf1<-mtc.model(net_psarrf1,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf1<- mtc.run(model_psarrf1, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrf1)

model_psarrf2<-mtc.model(net_psarrf2,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf2<- mtc.run(model_psarrf2, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrf2)

model_psarrf3<-mtc.model(net_psarrf3,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf3<- mtc.run(model_psarrf3, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrf3)

model_psarrf4<-mtc.model(net_psarrf4,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf4<- mtc.run(model_psarrf4, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrf4)

model_psarrf5<-mtc.model(net_psarrf5,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf5<- mtc.run(model_psarrf5, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrf5)

model_psarrf6<-mtc.model(net_psarrf6,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf6<- mtc.run(model_psarrf6, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrf6)

model_psarrf7<-mtc.model(net_psarrf7,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf7<- mtc.run(model_psarrf7, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrf7)

model_psarrf8<-mtc.model(net_psarrf8,type="consistency",n.chain=4,likelihood="binom",link="log",linearModel="random")
results_psarrf8<- mtc.run(model_psarrf8, n.adapt = 20000, n.iter = 50000, thin = 1)
forest(results_psarrf8)
